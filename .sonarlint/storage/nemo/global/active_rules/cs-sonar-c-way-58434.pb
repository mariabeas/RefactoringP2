
b
*fxcop:AssembliesShouldHaveValidStrongNames4
fxcop$AssembliesShouldHaveValidStrongNamesMAJOR
N
 fxcop:AvoidDuplicateAccelerators*
fxcopAvoidDuplicateAcceleratorsMAJOR
E
fxcop:AvoidEmptyInterfaces'
fxcopAvoidEmptyInterfacesCRITICAL
B
fxcop:AvoidExcessiveLocals$
fxcopAvoidExcessiveLocalsMAJOR
f
,fxcop:AvoidExcessiveParametersOnGenericTypes6
fxcop&AvoidExcessiveParametersOnGenericTypesMAJOR
P
!fxcop:AvoidNamespacesWithFewTypes+
fxcopAvoidNamespacesWithFewTypesMAJOR
A
fxcop:AvoidOutParameters%
fxcopAvoidOutParametersCRITICAL
n
0fxcop:CollectionsShouldImplementGenericInterface:
fxcop*CollectionsShouldImplementGenericInterfaceMAJOR
`
)fxcop:CompoundWordsShouldBeCasedCorrectly3
fxcop#CompoundWordsShouldBeCasedCorrectlyMAJOR
b
*fxcop:ConsiderPassingBaseTypesAsParameters4
fxcop$ConsiderPassingBaseTypesAsParametersMAJOR
T
#fxcop:DeclareEventHandlersCorrectly-
fxcopDeclareEventHandlersCorrectlyMAJOR
L
fxcop:DeclareTypesInNamespaces*
fxcopDeclareTypesInNamespacesBLOCKER
Z
&fxcop:DefaultParametersShouldNotBeUsed0
fxcop DefaultParametersShouldNotBeUsedMAJOR
b
*fxcop:DefineAccessorsForAttributeArguments4
fxcop$DefineAccessorsForAttributeArgumentsMAJOR
F
fxcop:DoNotCastUnnecessarily&
fxcopDoNotCastUnnecessarilyMAJOR
X
%fxcop:DoNotCatchGeneralExceptionTypes/
fxcopDoNotCatchGeneralExceptionTypesMAJOR
l
/fxcop:DoNotDeclareProtectedMembersInSealedTypes9
fxcop)DoNotDeclareProtectedMembersInSealedTypesMAJOR
h
-fxcop:DoNotDeclareStaticMembersOnGenericTypes7
fxcop'DoNotDeclareStaticMembersOnGenericTypesMAJOR
h
-fxcop:DoNotDeclareVirtualMembersInSealedTypes7
fxcop'DoNotDeclareVirtualMembersInSealedTypesMAJOR
\
'fxcop:DoNotDeclareVisibleInstanceFields1
fxcop!DoNotDeclareVisibleInstanceFieldsMAJOR
H
fxcop:DoNotExposeGenericLists'
fxcopDoNotExposeGenericListsMAJOR
^
(fxcop:DoNotHardcodeLocaleSpecificStrings2
fxcop"DoNotHardcodeLocaleSpecificStringsMAJOR
L
fxcop:DoNotHideBaseClassMethods)
fxcopDoNotHideBaseClassMethodsMAJOR
P
!fxcop:DoNotNameEnumValuesReserved+
fxcopDoNotNameEnumValuesReservedMAJOR
h
-fxcop:DoNotNestGenericTypesInMemberSignatures7
fxcop'DoNotNestGenericTypesInMemberSignaturesMAJOR
p
1fxcop:DoNotOverloadOperatorEqualsOnReferenceTypes;
fxcop+DoNotOverloadOperatorEqualsOnReferenceTypesMAJOR
L
fxcop:DoNotPassTypesByReference)
fxcopDoNotPassTypesByReferenceMAJOR
\
'fxcop:DoNotPrefixEnumValuesWithTypeName1
fxcop!DoNotPrefixEnumValuesWithTypeNameMAJOR
o
/fxcop:DoNotRaiseExceptionsInUnexpectedLocations<
fxcop)DoNotRaiseExceptionsInUnexpectedLocationsCRITICAL
Z
&fxcop:EnumeratorsShouldBeStronglyTyped0
fxcop EnumeratorsShouldBeStronglyTypedMAJOR
J
fxcop:EnumsShouldHaveZeroValue(
fxcopEnumsShouldHaveZeroValueMAJOR
J
fxcop:EnumStorageShouldBeInt32(
fxcopEnumStorageShouldBeInt32MAJOR
f
,fxcop:EventsShouldNotHaveBeforeOrAfterPrefix6
fxcop&EventsShouldNotHaveBeforeOrAfterPrefixMAJOR
J
fxcop:ExceptionsShouldBePublic(
fxcopExceptionsShouldBePublicMAJOR
X
%fxcop:FlagsEnumsShouldHavePluralNames/
fxcopFlagsEnumsShouldHavePluralNamesMAJOR
j
.fxcop:GenericMethodsShouldProvideTypeParameter8
fxcop(GenericMethodsShouldProvideTypeParameterMAJOR
~
8fxcop:ICollectionImplementationsHaveStronglyTypedMembersB
fxcop2ICollectionImplementationsHaveStronglyTypedMembersMAJOR
d
+fxcop:IdentifiersShouldDifferByMoreThanCase5
fxcop%IdentifiersShouldDifferByMoreThanCaseMAJOR
^
(fxcop:IdentifiersShouldHaveCorrectPrefix2
fxcop"IdentifiersShouldHaveCorrectPrefixMAJOR
^
(fxcop:IdentifiersShouldHaveCorrectSuffix2
fxcop"IdentifiersShouldHaveCorrectSuffixMAJOR
b
*fxcop:IdentifiersShouldNotContainTypeNames4
fxcop$IdentifiersShouldNotContainTypeNamesMAJOR
h
-fxcop:IdentifiersShouldNotHaveIncorrectPrefix7
fxcop'IdentifiersShouldNotHaveIncorrectPrefixMAJOR
h
-fxcop:IdentifiersShouldNotHaveIncorrectSuffix7
fxcop'IdentifiersShouldNotHaveIncorrectSuffixMAJOR
\
'fxcop:IdentifiersShouldNotMatchKeywords1
fxcop!IdentifiersShouldNotMatchKeywordsMAJOR
T
#fxcop:ImplementIDisposableCorrectly-
fxcopImplementIDisposableCorrectlyMAJOR
f
,fxcop:ImplementStandardExceptionConstructors6
fxcop&ImplementStandardExceptionConstructorsMAJOR
`
)fxcop:IndexersShouldNotBeMultidimensional3
fxcop#IndexersShouldNotBeMultidimensionalMAJOR
l
/fxcop:InitializeReferenceTypeStaticFieldsInline9
fxcop)InitializeReferenceTypeStaticFieldsInlineMAJOR
r
2fxcop:InterfaceMethodsShouldBeCallableByChildTypes<
fxcop,InterfaceMethodsShouldBeCallableByChildTypesMAJOR
D
fxcop:ListsAreStronglyTyped%
fxcopListsAreStronglyTypedMAJOR
>
fxcop:MarkEnumsWithFlags"
fxcopMarkEnumsWithFlagsMAJOR
n
0fxcop:MembersShouldNotExposeCertainConcreteTypes:
fxcop*MembersShouldNotExposeCertainConcreteTypesMAJOR
Z
&fxcop:MovePInvokesToNativeMethodsClass0
fxcop MovePInvokesToNativeMethodsClassMAJOR
T
#fxcop:NestedTypesShouldNotBeVisible-
fxcopNestedTypesShouldNotBeVisibleMAJOR
P
!fxcop:NormalizeStringsToUppercase+
fxcopNormalizeStringsToUppercaseMAJOR
`
)fxcop:OnlyFlagsEnumsShouldHavePluralNames3
fxcop#OnlyFlagsEnumsShouldHavePluralNamesMAJOR
|
7fxcop:OverloadOperatorEqualsOnOverloadingAddAndSubtractA
fxcop1OverloadOperatorEqualsOnOverloadingAddAndSubtractMAJOR
p
1fxcop:OverrideEqualsAndOperatorEqualsOnValueTypes;
fxcop+OverrideEqualsAndOperatorEqualsOnValueTypesMAJOR
Z
&fxcop:OverrideMethodsOnComparableTypes0
fxcop OverrideMethodsOnComparableTypesMAJOR
j
.fxcop:ParameterNamesShouldMatchBaseDeclaration8
fxcop(ParameterNamesShouldMatchBaseDeclarationMAJOR
h
-fxcop:ParameterNamesShouldNotMatchMemberNames7
fxcop'ParameterNamesShouldNotMatchMemberNamesMAJOR
V
$fxcop:PropertiesShouldNotBeWriteOnly.
fxcopPropertiesShouldNotBeWriteOnlyMAJOR
d
+fxcop:PropertyNamesShouldNotMatchGetMethods5
fxcop%PropertyNamesShouldNotMatchGetMethodsMAJOR
[
%fxcop:ProvideObsoleteAttributeMessage2
fxcopProvideObsoleteAttributeMessageCRITICAL
D
fxcop:RemoveEmptyFinalizers%
fxcopRemoveEmptyFinalizersMAJOR
l
/fxcop:ReplaceRepetitiveArgumentsWithParamsArray9
fxcop)ReplaceRepetitiveArgumentsWithParamsArrayMAJOR
|
7fxcop:ResourceStringCompoundWordsShouldBeCasedCorrectlyA
fxcop1ResourceStringCompoundWordsShouldBeCasedCorrectlyMAJOR
h
-fxcop:ResourceStringsShouldBeSpelledCorrectly7
fxcop'ResourceStringsShouldBeSpelledCorrectlyMAJOR
D
fxcop:SetLocaleForDataTypes%
fxcopSetLocaleForDataTypesMAJOR
E
fxcop:SpecifyIFormatProvider%
fxcopSpecifyIFormatProviderINFO
n
0fxcop:SpecifyMarshalingForPInvokeStringArguments:
fxcop*SpecifyMarshalingForPInvokeStringArgumentsMAJOR
H
fxcop:SpecifyStringComparison'
fxcopSpecifyStringComparisonMAJOR
X
%fxcop:StaticHolderTypesShouldBeSealed/
fxcopStaticHolderTypesShouldBeSealedMAJOR
n
0fxcop:StaticHolderTypesShouldNotHaveConstructors:
fxcop*StaticHolderTypesShouldNotHaveConstructorsMAJOR
j
.fxcop:StringUriOverloadsCallSystemUriOverloads8
fxcop(StringUriOverloadsCallSystemUriOverloadsMAJOR
b
*fxcop:TestForEmptyStringsUsingStringLength4
fxcop$TestForEmptyStringsUsingStringLengthMAJOR
\
'fxcop:TypeNamesShouldNotMatchNamespaces1
fxcop!TypeNamesShouldNotMatchNamespacesMAJOR
b
*fxcop:TypesShouldNotExtendCertainBaseTypes4
fxcop$TypesShouldNotExtendCertainBaseTypesMAJOR
v
4fxcop:TypesThatOwnDisposableFieldsShouldBeDisposable>
fxcop.TypesThatOwnDisposableFieldsShouldBeDisposableMAJOR
t
3fxcop:TypesThatOwnNativeResourcesShouldBeDisposable=
fxcop-TypesThatOwnNativeResourcesShouldBeDisposableMAJOR
X
%fxcop:UriParametersShouldNotBeStrings/
fxcopUriParametersShouldNotBeStringsMAJOR
X
%fxcop:UriPropertiesShouldNotBeStrings/
fxcopUriPropertiesShouldNotBeStringsMAJOR
\
'fxcop:UriReturnValuesShouldNotBeStrings1
fxcop!UriReturnValuesShouldNotBeStringsMAJOR
L
fxcop:UseEventsWhereAppropriate)
fxcopUseEventsWhereAppropriateMAJOR
X
%fxcop:UseGenericEventHandlerInstances/
fxcopUseGenericEventHandlerInstancesMAJOR
P
!fxcop:UseGenericsWhereAppropriate+
fxcopUseGenericsWhereAppropriateMAJOR
f
,fxcop:UseIntegralOrStringArgumentForIndexers6
fxcop&UseIntegralOrStringArgumentForIndexersMAJOR
P
!fxcop:UseLiteralsWhereAppropriate+
fxcopUseLiteralsWhereAppropriateMAJOR
N
 fxcop:UseOrdinalStringComparison*
fxcopUseOrdinalStringComparisonMAJOR
<
fxcop:UsePreferredTerms!
fxcopUsePreferredTermsMAJOR
T
#fxcop:UsePropertiesWhereAppropriate-
fxcopUsePropertiesWhereAppropriateMAJOR